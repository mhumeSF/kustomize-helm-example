argo-cd:
  global:
    logging:
      level: debug
  configs:
    cmp:
      create: true
      plugins:
        kustomize-helm:
          allowConcurrency: true
          init:
            command: [sh, -c]
            args:
              - >-
                helm dependency build ../base || true
          generate:
            command: [sh, -c]
            args:
              - >-
                if [ -f "values.yaml" ]; then
                  helm template $ARGOCD_APP_NAME ../base --include-crds --kube-version $KUBE_VERSION --api-versions $KUBE_API_VERSIONS -f ../base/values.yaml -f values.yaml > ../base/all.yaml && kustomize build
                else
                  helm template $ARGOCD_APP_NAME ../base --include-crds --kube-version $KUBE_VERSION --api-versions $KUBE_API_VERSIONS -f ../base/values.yaml > ../base/all.yaml && kustomize build
                fi
  repoServer:
    initContainers:
    - name: download-tools
      image: alpine:3.17
      command: [sh, -c]
      args:
      - >-
        cp argocd-vault-plugin /custom-tools/
      volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
    extraContainers:
    - name: kustomize-helm
      command: [/var/run/argocd/argocd-cmp-server]
      args:
      - --loglevel
      - debug
      image: quay.io/argoproj/argocd:v2.6.4
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
      # Register plugins into sidecar
      - mountPath: /home/argocd/cmp-server/config/plugin.yaml
        subPath: kustomize-helm.yaml
        name: argocd-cmp-cm
      - name: custom-tools
        subPath: argocd-vault-plugin
        mountPath: /usr/local/bin/argocd-vault-plugin
    volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
